
@mixin hover-expand($init-w, $init-h, $mult:4){
  display: block;
  position: absolute;
  @include transition-property(width, height, margin, z-index);
  @include transition-duration(0.5s);
  width   : $init-w;
  height  : $init-h;
  margin-top: 0;
  &:hover{
    width: $init-w * $mult;
    height: $init-h * $mult;
    margin-top: ($init-h * $mult / -2) + ($init-h / 2);
    z-index: 9;
    @include transition-property(width, height, margin);
    @include transition-duration(0.5s);
  }
}


@mixin full-page($padding:0){
  display   : block;
  position  : absolute;
  padding   : 0;
  margin    : 0;
  top:$padding;
  right:$padding;
  bottom:$padding;
  left:$padding;
}

.zero-edge{
  position:absolute;
  top:0;
  bottom:0;
  right:0;
  left:0;
}

@mixin no-margin {
  margin:0;
  padding:0;
}

@mixin list-no-margin {
  @include no-margin;
  list-style:none;
  li{
    @include no-margin;
    list-style:none;
  }
}

@mixin icon-size($size:14px){
  width:$size;
  height:$size;
  line-height:$size;
  font-size:$size;
  background-position:$size, $size;
}



/*
 * Apply a CSS3 transition
 *
 * $property The property you want to animate, eg opacity
 * $duration The duration of the animation, eg 1s
 * $ms Include -ms-transition; default is false because IE does not support transitionEnd callback
 *
 * @include transition(opacity, 0.5s);
 */

@mixin transition($property, $duration, $ms: true) {
  -webkit-transition: $property $duration ease-in-out;
  -moz-transition: $property $duration ease-in-out;
  -o-transition: $property $duration ease-in-out;
  @if ($ms) {
    -ms-transition: $property $duration ease-in-out;
  }
  transition: $property $duration ease-in-out;
}

@mixin transitionLong($property, $duration, $easing:ease-in-out, $delay:false) {
  @include transitionProperty($property);
  @include transitionDuration($duration);

  @if($delay) {
    @include transitionDelay($delay);
  }

  @if($easing) {
    @include transitionTimingFunction($easing);
  }
}

/*
 * Apply a CSS3 transition-delay
 * @include transitionDelay(2s);
 */
@mixin transitionDelay($delay) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  -ms-transition-delay: $delay;
  transition-delay: $delay;
}

/*
 * Apply a CSS3 transition-duration
 * @include transitionDuration(1s);
 */
@mixin transitionDuration($duration) {
  -webkit-transition-duration: $duration;
  -moz-transition-duration: $duration;
  -o-transition-duration: $duration;
  -ms-transition-duration: $duration;
  transition-duration: $duration;
}

/*
 * Apply a CSS3 transition-property
 * @include transitionProperty(opacity);
 * @include transitionProperty((height, width)); Multiple properties can be passed in surrounded by brackets
 */
@mixin transitionProperty($property) {
  -webkit-transition-property: $property;
  -moz-transition-property: $property;
  -o-transition-property: $property;
  -ms-transition-property: $property;
  transition-property: $property;
}

/*
 * Apply a CSS3 transition-timing-function
 * @include transitionTimingFunction(easing);
 */
@mixin transitionTimingFunction($easing) {
  -webkit-transition-timing-function: $easing;
  -moz-transition-timing-function: $easing;
  -o-transition-timing-function: $easing;
  -ms-transition-timing-function: $easing;
  transition-timing-function: $easing;
}